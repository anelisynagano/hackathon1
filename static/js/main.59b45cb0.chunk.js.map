{"version":3,"sources":["Title.jsx","Button.jsx","Home.jsx","HowToPlay.jsx","About.jsx","Symbol.jsx","PlayerSide.jsx","ComputerSide.jsx","Game.jsx","App.js","serviceWorker.js","index.js"],"names":["Title","_ref","text","react_default","a","createElement","Button","checkWinner","className","onClick","Home","react","src_Title","react_router_dom","to","src_Button","HowToPlay","About","href","target","GameSymbol","image","handleClickSymbol","selectedSymbol","name","src","url","alt","PlayerSide","images","map","Symbol","key","ComputerSide","gameImages","randomImage","Math","floor","random","length","initialState","isDelayElapsed","Game","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onMarkAsClicked","clickedSymbol","setState","setTimeout","resetGame","state","_this2","src_PlayerSide","src_ComputerSide","Component","App","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.59b45cb0.chunk.js","sourcesContent":["import React from 'react';\n\nconst Title = ({ text }) => {\n  return (\n    <div>\n      <h1>{text || \"Title Here\"}</h1>\n    </div>\n  );\n}\n\nexport default Title;\n","import React from 'react';\n\nconst Button = ({ text, checkWinner }) => {\n  return (\n    <div>\n      <button\n        className=\"btn\"\n        onClick={checkWinner}\n      >\n        {text || \"Button\"}\n      </button>\n    </div>\n  );\n}\n\nexport default Button;","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport Title from './Title';\nimport Button from './Button';\n\nconst Home = () => {\n  return (\n    <Fragment>\n      <Title text=\"Rock, Paper, Scissors\" />\n      <Link to=\"/game\"><Button text=\"Start Game\" /></Link>\n      <Link to=\"/howto\"><Button text=\"How to Play\" /></Link>\n      <Link to=\"/about\"><Button text=\"About\" /></Link>\n    </Fragment>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Button from './Button';\n\n\nconst HowToPlay = () => {\n  return (\n    <div>\n      <h1>Game Rules</h1>\n      <p>The game is played when players deliver hand signals that will represent the elements of the game; rock, paper and scissors. The outcome of the game is determined by 3 simple rules:</p>\n        <ul>\n          <li> Rock wins against scissors.</li>\n          <li> Scissors win against paper.</li>\n          <li> Paper wins against rock.</li>\n        </ul>\n        <Link to=\"/\"><Button text=\"Back to Home\" /></Link>\n    </div>\n  );\n}\n\nexport default HowToPlay;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Button from './Button';\n\nconst About = () => {\n  return (\n    <div>\n      <h1>About me</h1>\n      <p>This project is based on a 24 hours hackathon with the theme <b>Game</b>, for Wild Code School.</p>\n      <p>Please click below to visit my Linkedin profile!</p>\n      <a href=\"https://www.linkedin.com/in/anelisynagano\" target=\"_blank\"><h2>Anelisy Nagano</h2></a>\n     \n      <Link to=\"/\"><Button text=\"Back to Home\" /></Link>\n    </div>\n  );\n}\n\nexport default About;\n","import React from 'react';\n\n\n\nconst GameSymbol = ({ image, handleClickSymbol, selectedSymbol }) => {\n  \n  const handleClick = () => {\n    handleClickSymbol(image);\n  }\n  \n  if (!selectedSymbol.name ||(image === selectedSymbol)) {\n    return (    \n      <div>\n          <img \n            src={image.url}\n            alt={image.name}\n            onClick={handleClick}\n            \n          />    \n      </div>\n    )\n  };\n\n  return null;\n}\n\n\nexport default GameSymbol;\n","import React from 'react';\nimport GameSymbol from './Symbol';\n\nconst PlayerSide = ({ images, handleClickSymbol, selectedSymbol }) => {\n\n  return (\n    <div>\n      <p>Human<br/>Choice</p>\n        {images.map(image => {\n          return (\n            <GameSymbol\n              image={image}\n              key={image.name}\n              handleClickSymbol={handleClickSymbol}\n              selectedSymbol={selectedSymbol}\n            />\n            )})}   \n    </div>\n            \n            )\n          }\n\nexport default PlayerSide;\n","import React from 'react';\nimport GameSymbol from './Symbol';\n\nconst ComputerSide = ({ images, handleClickSymbol, selectedSymbol }) => {\n  return (\n    \n    <div>\n      <p>Computer<br/>Choice</p>\n        {images.map(image => {\n          return (\n            <GameSymbol \n              image={image}\n              key={image.name} \n              handleClickSymbol={handleClickSymbol}\n              selectedSymbol={selectedSymbol}\n            />\n        )})}   \n    </div>\n  );\n}\n\nexport default ComputerSide;\n","import React, { Component, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport Title from './Title';\nimport PlayerSide from './PlayerSide';\nimport ComputerSide from './ComputerSide';\nimport Button from './Button';\n\nconst gameImages = [\n  { \"name\": \"rock\", \"url\": \"https://i.imgur.com/dEEEx4G.png\" },\n  { \"name\": \"paper\", \"url\": \"https://i.imgur.com/1gxWcZy.png\" },\n  { \"name\": \"scissors\", \"url\": \"https://i.imgur.com/XfMevXT.png\" },\n]\n\nconst randomImage = gameImages[Math.floor(Math.random()*gameImages.length)];\nconst initialState = { selectedSymbol: {}, isDelayElapsed: false };\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    this.state = initialState  \n  }\n\n  onMarkAsClicked = (clickedSymbol) => {\n    this.setState(\n      () => ({ selectedSymbol: clickedSymbol }),\n      () => {\n        setTimeout(() => {\n          this.setState({ isDelayElapsed: true })\n        }, 600)\n      }\n    );\n  }\n\n  resetGame = () => {\n    this.setState(initialState);\n  }\n\n  render () {\n  const checkWinner = () => {\n    if (this.state.selectedSymbol.name === 'scissors' && randomImage.name === 'paper') {\n      return \"Player 1 wins!\";\n    }\n    if (this.state.selectedSymbol.name === 'paper' && randomImage.name === 'rock') {\n      return \"Player 1 wins!\";\n    }\n    if (this.state.selectedSymbol.name === 'rock' && randomImage.name === 'scissors') {\n      return \"Player 1 wins!\";\n    }\n    if (this.state.selectedSymbol.name === randomImage.name){\n      return \"Draw!\";\n    }\n    if (this.state.selectedSymbol.name === 'scissors' && randomImage.name === 'rock') {\n      return \"Computer won! Try Again!\";\n    }\n    if (this.state.selectedSymbol.name === 'paper' && randomImage.name === 'scissors') {\n      return \"Computer won! Try Again!\";\n    }\n    if (this.state.selectedSymbol.name === 'rock' && randomImage.name === 'paper') {\n      return \"Computer won! Try Again!\";\n    }\n  }\n    return (\n    <Fragment>\n      <Title text=\"Make your choice!\" />\n      {\n          this.state.selectedSymbol.name && this.state.isDelayElapsed && (\n        <p>{checkWinner()}</p>\n        )\n      }\n      <div className=\"row\">\n        <div className=\"column\">\n          <PlayerSide images={gameImages} handleClickSymbol={this.onMarkAsClicked} selectedSymbol={this.state.selectedSymbol}/>\n        </div>\n        {\n          this.state.selectedSymbol.name && this.state.isDelayElapsed && (\n            <div className=\"column\">\n                <ComputerSide images={gameImages} handleClickSymbol={() => {}} selectedSymbol={randomImage}/>\n            </div>\n          )\n        }\n      </div>\n\n      <Button checkWinner={this.resetGame} text=\"Play Again\" />\n      <Link to=\"/\"><Button text=\"Back to Home\" /></Link>\n    </Fragment> \n )};\n}\n\nexport default Game;\n","import React from 'react';\nimport Home from './Home';\nimport { Switch, Route } from 'react-router-dom';\nimport HowToPlay from './HowToPlay';\nimport About from './About';\nimport Game from './Game';\n\nconst App = () => {\n  return (\n    <div className=\"page-content\">\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/about\" component={About} />\n        <Route path=\"/howto\" component={HowToPlay} />\n        <Route path=\"/game\" component={Game} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <HashRouter>\n        <App />\n    </HashRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}